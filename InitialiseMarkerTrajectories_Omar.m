% Author       : F. Moissenet
%                Kinesiology Laboratory (K-LAB)
%                University of Geneva
%                https://www.unige.ch/medecine/kinesiology
% License      : Creative Commons Attribution-NonCommercial 4.0 International License 
%                https://creativecommons.org/licenses/by-nc/4.0/legalcode
% Source code  : https://github.com/fmoissenet/NSLBP-BIOToolbox
% Reference    : To be defined
% Date         : June 2020
% -------------------------------------------------------------------------
% Description  : This routine initialise the markerset used in this project.
% Inputs       : To be defined
% Outputs      : To be defined
% -------------------------------------------------------------------------
% Dependencies : None
% -------------------------------------------------------------------------
% This work is licensed under the Creative Commons Attribution - 
% NonCommercial 4.0 International License. To view a copy of this license, 
% visit http://creativecommons.org/licenses/by-nc/4.0/ or send a letter to 
% Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
% -------------------------------------------------------------------------

function Trial = InitialiseMarkerTrajectories_Omar(Trial,Marker)

% Set markerset
markerSet = {'RASI','RILC','RPSI','LPSI','LILC','LASI','S1',... %7
             'RGTR','RTHI1', 'RTHI2', 'RKNE','RKNM',...         %12
             'RFAX','RTTA','RTIB1', 'RTIB2', 'RANK','RMED',...  %18
             'RHEE','RTOE','RFMH','RSMH','RVMH',...             %23
             'RHAL',...                                         %24
             'LGTR','LTHI1','LTHI2','LKNE','LKNM',...           %29
             'LFAX','LTTA','LTIB1','LTIB2','LANK','LMED',...    %35
             'LHEE','LTOE','LFMH','LSMH','LVMH',...             %40
             'LHAL',...                                         %41
             'L1','L3','L5',...
             'C7','T2','T4','T6','T8','T10','T12','CLAV','STRN',...
             'RFHD','RBHD','LBHD','LFHD',...
             'RSHO','RELB','RWRA','RWRB','RHAN',...
             'LSHO','LELB','LWRA','LWRB','LHAN',...
             'RBAK', ... %68
             'RTHAP','RTHAD', ... %CGM 2.4 (THI2 and TIB2 replace THI1 and TIB1)
             'RTIAP','RTIAD', ... %72
             'LTHAP','LTHAD', ... %74
             'LTIAP','LTIAD'};       
         
% Set landmark type
% 'landmark' is a marker related to a rigid body
% 'semi-landmark' is a marker related to a curve
% 'hybrid-landmark' is a marker related to a curve and a rigid body
% 'technical' is a marker not used for anatomical description
landmarkList = {'landmark','landmark','landmark','landmark','landmark','landmark','hybrid-landmark',...
                'landmark','technical','technical','landmark','landmark',...
                'landmark','landmark','technical','technical','landmark','landmark',...
                'landmark','landmark','landmark','landmark','landmark',...
                'technical',...
                'landmark','technical','technical','landmark','landmark',...
                'landmark','landmark','technical','technical','landmark','landmark',...
                'landmark','landmark','landmark','landmark','landmark',...
                'technical',...
                'semi-landmark','semi-landmark','semi-landmark',...
                'hybrid-landmark','hybrid-landmark','hybrid-landmark','hybrid-landmark','hybrid-landmark','hybrid-landmark','hybrid-landmark','landmark','landmark',...
                'landmark','landmark','landmark','landmark',...
                'landmark','landmark','landmark','landmark','landmark',...
                'landmark','landmark','landmark','landmark','landmark',...
                'technical', ...
                'technical', 'technical', ...
                'technical','technical', ...
                'technical','technical', ...
                'technical','technical'};             
         
% Set related rigid segments
% Only used with landmark and hybrid-landmarks markers ('none' instead')
segmentList = {'Pelvis','Pelvis','Pelvis','Pelvis','Pelvis','Pelvis','Pelvis',...
               'RThigh','RThigh','RThigh','RThigh','RThigh',...
               'RShank','RShank','RShank','RShank','RShank','RShank',...
               'RFoot','none','RFoot','RFoot','RFoot',... % Toe not present in several sessions
               'none',...
               'LThigh','LThigh','LThigh','LThigh','LThigh',...
               'LShank','LShank','LShank','LShank','LShank','LShank',...
               'LFoot','none','LFoot','LFoot','LFoot',... % Toe not present in several sessions
               'none',...
               'none','none','none',...
               'Thorax','Thorax','Thorax','Thorax','Thorax','Thorax','Thorax','Thorax','Thorax',...
               'Head','Head','Head','Head',...
               'none','none','none','none','none',...
               'none','none','none','none','none',...
               'none', ...
               'RThigh','RThigh', ...
               'RShank','RShank', ...
               'LThigh','LThigh', ...
               'LShank','LShank'};
           
% Set related curves
% Only used with semi-landmark and hybrid-landmarks markers ('none' instead')
% Syntax: Curve named followed by order number on the curve
curveList = {'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,'spine',11,...
             'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,...
             'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,...
             'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,...
             'none',nan,...
             'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,...
             'none',nan,'none',nan,'none','none',nan,nan,'none',nan,'none',nan,...
             'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,...
             'none',nan,...
             'spine',8,'spine',9,'spine',10,...
             'spine',1,'spine',2,'spine',3,'spine',4,'spine',5,'spine',6,'spine',7,'none',nan,'none',nan,...
             'none',nan,'none',nan,'none',nan,'none',nan,...
             'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,...
             'none',nan,'none',nan,'none',nan,'none',nan,'none',nan,...
             'none',nan, ...
             'none',nan,'none',nan,...
             'none',nan,'none',nan,...
             'none',nan,'none',nan,...
             'none',nan,'none',nan};  

% Initialise markers
Trial.Marker = [];
for i = 1:length(markerSet)
    Trial.Marker(i).label                 = markerSet{i};
    Trial.Marker(i).type                  = landmarkList{i};
    Trial.Marker(i).Body.Segment.label    = segmentList{i};
    Trial.Marker(i).Body.Curve.label      = curveList{i*2-1};
    Trial.Marker(i).Body.Curve.index      = curveList{i*2};
    if isfield(Marker,markerSet{i})
        Trial.Marker(i).Trajectory.raw    = Marker.(markerSet{i})*1e-3; % Convert mm to m
        Trial.Marker(i).Trajectory.fill   = [];
        Trial.Marker(i).Trajectory.smooth = [];
        Trial.Marker(i).Trajectory.rcycle = [];
        Trial.Marker(i).Trajectory.lcycle = [];
        Trial.Marker(i).Trajectory.units  = 'm';
        Trial.Marker(i).Trajectory.Gap    = [];
    else
        Trial.Marker(i).Trajectory.raw    = [];
        Trial.Marker(i).Trajectory.fill   = [];
        Trial.Marker(i).Trajectory.smooth = [];
        Trial.Marker(i).Trajectory.rcycle = [];
        Trial.Marker(i).Trajectory.lcycle = [];
        Trial.Marker(i).Trajectory.units  = 'm';
        Trial.Marker(i).Trajectory.Gap    = [];
    end
    Trial.Marker(i).Processing.smooth     = 'none';
    Trial.Marker(i).Processing.Gap        = [];
end